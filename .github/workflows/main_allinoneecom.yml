name: Build and deploy Node.js app to Azure Web App - allInOneEcom

on:
  push:
    branches: [main]
  workflow_dispatch:

concurrency:
  group: allInOneEcom-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    defaults:
      run:
        working-directory: backend
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "22.x"
          cache: "npm"
          cache-dependency-path: backend/package-lock.json

      - name: Install
        run: npm ci

      - name: Generate Prisma Client
        run: |
          npx prisma generate
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          NODE_ENV: ${{ secrets.NODE_ENV }}
          CORS_ORIGIN: ${{ secrets.CORS_ORIGIN }}
          CORS_CREDENTIALS: ${{ secrets.CORS_CREDENTIALS }}
          PORT: ${{ secrets.PORT }}
          CLOUD_NAME: ${{ secrets.CLOUD_NAME }}
          CLOUD_API_KEY: ${{ secrets.CLOUD_API_KEY }}
          CLOUD_API_SECRET: ${{ secrets.CLOUD_API_SECRET }}
          JWT_REFRESH_SECRET: ${{ secrets.JWT_REFRESH_SECRET }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}

      - name: Build
        run: npm run build --if-present

      - name: Prepare deploy bundle
        run: |
          mkdir -p deploy
          cp package.json package-lock.json deploy/
          cp -r dist deploy/dist
          cp -r prisma deploy/prisma

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: backend/deploy

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: node-app
          path: app

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_3D895A7006984C2DB8F9E58FB09E63DF }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_D61A40C24FB14061A8C87B816F54F293 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_90B21682278C4CB0916FFD7DB235D5A3 }}

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: allInOneEcom
          slot-name: Production
          package: app

      # Ensure dependencies are installed after deployment
      - name: Install production dependencies on Azure
        run: |
          cd app
          npm ci --omit=dev

      # (Optional) Run migrations post-deploy via Azure CLI if you prefer runtime migration
      - name: Post-deploy migrations
        run: |
          echo "Consider using a startup script or separate job for migrations"